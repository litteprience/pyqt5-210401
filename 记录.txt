要讲内容：
控件：可视
组件：可视+非可视

布局管理：最大的坑，代码方式

信号与槽：事件，数据传递
图形与特效：美化
扩展应用：开发完桌面应用，如何发布给用户使用，把所有环境打包成一个安装环境。

---------------------------------------------------------------------------------------
搭建PyQt5开发环境
1.python
推荐：anaconda(包含了大部分可能会用到的库)

2.PyQt5模块
3.ide比如pycharm

---------------------------------------------------------------------------------------
开发第一个基于pyqt5的桌面应用---first

必须使用两个类 ：QApplication和QWidget。都在pyqt5.QtWidgets。

---------------------------------------------------------------------------------------
将.ui文件转为.py文件

方法一：命令行
python -m PyQt5.uic.pyuic demo.ui -o demo.py

方法二：命令行
pyuic5 demo.ui -o demo.py

添加进扩展工具：使用方法一
参数栏：-m PyQt5.uic.pyuic $FileName$ -o $FileNameWithoutExtension$.py

---------------------------------------------------------------------------------------
QTDesigner 窗口部件盒
布局layouts
垂直、水平、栅格、表单
水平布局：
    方法一：先放控件再放布局
    方法二：先放布局，将控件拖进布局中

绝对布局：将控件直接拖到窗口默认为绝对布局，共有四个参数距离左上角的坐标xy和控件自身的高度和宽度
        可在视图->属性编辑器->geometry中修改

Qweb浏览器控件：该版本不包含浏览器控件，若想使用浏览器控件则
            1.将container->Widget拖进mainwindow窗口
            2.右键->提升  提升类的名称: QWebEngineView
                             头文件: PyQt5.QtWebEngineWidgets
                  ->添加 ->提升
            3.在属性编辑器中修改名字为Brower1
            4.保存并在pycharm中将.ui文件转换为.py文件
            5.在.py文件中找到浏览器配置部分，添加url
                self.Browser1.setUrl(QtCore.QUrl("https://geekori.com/"))
            6.与其他布局调用方式一致。

-----题外话--------
使用git作为版本控制
    红色：未加入版本控制
    绿色：已加入版本控制，还未提交
    蓝色：已加入，已提交，有改动。
-----end---------



